#waf_zone name=waf size=20m;
#lua_package_path "?.lua";

server {
        include custom-error-page.conf;

        listen 0.0.0.0:8443 ssl;
        listen [::]:8443 ssl;
        server_name  waf.kac.fun;

        # start nginx waf config 
        #waf on;
        #waf_rule_path  conf/ngx_waf/assets/rules/;
        #waf_mode STD;
        #waf_cc_deny on rate=500r/m duration=10m zone=waf:cc;
        #waf_cache on capacity=50;

        #waf_modsecurity_transaction_id "host1-$request_id";
        #waf_modsecurity on file=conf/modsec/main.conf;
        # end ngx_waf config 

        modsecurity on;
        modsecurity_transaction_id "waf-$request_id";
        modsecurity_rules_file conf/modsec/main.conf; 
        ssl_session_timeout  5m;

        ssl_certificate_key https.key;
        ssl_certificate https.pem;

        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_verify_client off;

        error_page 497 https://$server_name$request_uri;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Scheme $scheme;
        proxy_set_header   X-Waf-Uuid $request_id;
        proxy_next_upstream http_502 http_504 error timeout invalid_header;
        proxy_redirect http:// $scheme://;
        port_in_redirect on;
        proxy_read_timeout 1200;

        proxy_intercept_errors off;
        proxy_hide_header Server;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

	    location /ngx_vars {
            add_header Content-Type "text/plain"; 
            content_by_lua_file conf/lua/print_ngx_vars.lua;
        }

        location / {
	    add_header Content-Type "text/plain";
            access_by_lua_file conf/lua/publish_log.lua;
            proxy_pass http://127.0.0.1:60080/; 

        }

        location ~* \.(gif|jpg|png|jpeg|webp|bmp|swf)$ {
            modsecurity off;
        }

        location ~* \.(html|htm|js|css)$ {
            modsecurity off;
        }

   }


server {
        listen 127.0.0.1:60080;
        listen [::]:60080;
        server_name  waf.kac.fun;
        location / {
            root html; 
            index index.html; 
            rewrite_by_lua_block {
                local ngx = require "ngx";
                ngx.req.set_header("Test",{"1","2"});
                local header_ngx = ngx.req.get_headers();
                ngx.say(header_ngx["Test"]);
                ngx.print(header_ngx["Test"]);
             }
        }
   }

